<?php
use yii\helpers\Url;
?>
<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Добавление новой записи (контакта) в телефонную книгу.</title>
    <link rel="stylesheet" href="/education/css/template/style.css">
    <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/styles/default.min.css">
    <script src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/highlight.min.js"></script>
    <style>

    </style>
</head>
<body>
<a href="<?= Url::to(['/education/task/view', 'id' => 2])?>">
    <button>Назад к списоку примеров</button>
</a><br>
<!-- *** Описательный текст к заданию *** -->
<div>
    <p>
        Работу с регулярными шаблонами обеспечивают как объекты типа RegExp, так и объекты типа String. С одним из методов объекта RegExp «test» мы уже познакомились. Напомним — этот метод позволяет проверить, подходит ли строка под данный шаблон, и возвращает результат этой проверки.
    </p>
    <p>
        Еще один метод объекта RegExp <b>«object/null exec(str)»</b> имеет расширенные возможности по сравнению с методом <b>«test»</b>. Параметром метода также является строка, обрабатываемая регулярным выражением. Кроме проверки строки на соответствие шаблону, метод <b>«exec»</b> обеспечивает поиск тех фрагментов исходной строки, которые совпали с шаблоном. В качестве результата своей работы метод возвращает объект с описанием найденного фрагмента либо значение <b>«»</b>, если совпадений с шаблоном найдено не было.
    </p>
    <p>
        Подобной с методом «exec» функциональностью обладает метод <b>«object/null match(RegExp)»</b> у объекта String. Напомним, метод <b>«exec»</b> принадлежит объекту <b>«RegExp»</b>. Метод <b>«match»</b> также проверяет строку на соответствие шаблону и, в зависимости от результатов проверки, возвращает объект с найденными фрагментами, либо <b>«null»</b>, если совпадений с шаблоном не найдены. В отличие от метода «exec» результаты работы метода <b>«match»</b> будут разными для шаблонов с флагом «g» и без него.
    </p>
    <p>
        1. Данные отличия позволяют выбрать один из рассмотренных методов в зависимости от желаемых результатов проверки. Если нужны сами числа, то удобнее будет получить их за один запрос методом <b>«String.match»</b> не создавая циклы. Если же нужны данные о положении этих чисел в строке, то предпочтение можно отдать методу <b>«RegExp.exec»</b>, который эту информацию предоставляет в явном виде. Всё зависит от конкретной задачи, стоящей перед программистом.
    </p>
    <p>
        2. Еще одним методом объекта <b>«String»</b>, работающим с регулярными выражениями, является <b>«replace»</b>. Этот метод позволяет выполнить замену найденных совпадений на другие значения.
    </p>
    <p>
        3. Третьим методом объекта <b>«String» </b>(после  и <b>«replace»</b>), работающим с регулярными выражениями, является метод <b>«split»</b>. Этот метод предназначен для разбиения строки по определенному шаблону.
    </p>
    <p>
        В завершение знакомства с работой регулярных выражений рассмотрим еще один часто используемый на практике флаг <b>«i»</b>, означающий регистронезависимый анализ шаблона. Напомним, что регистронезависимость означает проведение сравнений, одинаковых как для больших букв (символов верхнего регистра), так и для маленьких (нижнего регистра). Обычное сравнение (без флага <b>«i»)</b> является регистрозависимым, то есть большие и маленькие буквы считаются разными символами.
    </p>
<pre>
    <code class="hljs language-html">

    </code>
</pre>

<hr>
<!-- *** Область примера *** -->

<script>
    // str = "20% of population owning 80% income";
    // template = /\d+/g;
    //
    // while(result = template.exec(str)) {
    //     console.log(result);
    // }

    str = "20% of population owning 80% income";
    template = /\d+/g;
    console.log(str.match(template));
    // result = false;
    // while(result = template.exec(str)) {
    //     console.log(result);
    // }
</script>
<script>hljs.highlightAll();</script>
</body>
</html>

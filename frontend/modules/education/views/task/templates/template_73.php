<?php
use yii\helpers\Url;
?>
<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Ajax. Синхронные и асинхронные запросы</title>
    <link rel="stylesheet" href="/education/css/template/style.css">
    <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/styles/default.min.css">
    <script src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.5.1/build/highlight.min.js"></script>
    <style>

    </style>
</head>
<body>
<a href="<?= Url::to(['/education/task/view', 'id' => 3])?>">
    <button>Назад к списоку примеров</button>
</a><br>
<!-- *** Описательный текст к заданию *** -->
<div class="main">
    <p>
        Очень часто нам нужно получить или отправить какие-либо данные с сервера. Это делается с помощью сетевых запросов. Запросы можно разделить на синхронные и асинхронные.
    </p>
    <p>
        <b>Синхронные запросы</b> — запросы, при отправке которых нужно дождаться ответа с сервера. Пока запрос обрабатывается на сервере, выполнение скрипта останавливается в ожидании ответа, и страница перестает откликаться на действие пользователя.
    </p>
    <p>
        <b>Асинхронные запросы</b> — запросы, которые позволяют не дожидаться ответа с сервера. Результат запроса будет обработан в момент, как только ответ будет принят с сервера. Скрипт продолжает работу, что позволяет пользователю продолжить работу на странице. Асинхронные запросы используют для работы с большим количеством данных, когда запрос будет долгим, и у пользователя должна быть возможность взаимодействовать со страницей.
    </p>
    <p>
        Для отправки запросов используется технология Ajax. <br>
        <b>Ajax</b> — технология для взаимодействия с сервером без перезагрузки страницы. <br>
        Технология Ajax основана на JavaScript и XML и поддерживает асинхронность, что видно из ее аббревиатуры <i>Asynchronous JavaScript</i> And <i>XML</i>. В конце указан формат данных XML, но, несмотря на это, также можно использовать JSON или даже простой текст.
    </p>
    <p>
        Запросы Ajax применяются в таких задачах, как:
        <ul>
            <li>Отправка данных из формы;</li>
            <li>Для написания почтовой системы или чатов, чтобы принимать сообщения без перезагрузки страницы;</li>
            <li>Когда нужно подгружать данные постепенно, а не все сразу, например, загрузка товаров, комментариев, картинок;</li>
            <li>Поисковые системы используют автозаполнение поисковой строки, предлагая наиболее популярные запросы.</li>
        </ul>
    </p>
    <p>
        <b>Сервер</b> — это компьютер или программное обеспечение, которое обеспечивает взаимодействие пользователя и страницы сайта, принимает запросы, обрабатывает их, отправляет ответы на эти запросы, хранит данные, обеспечивает защиту этих данных и многое другое.
    </p>
    <p>
        <b>Удаленный сервер</b> — специальный мощный компьютер, предназначенный для больших нагрузок, он, как правило, находится в специализированном месте и доступ к нему осуществляется по сети.
    </p>
    <p>
        <b>Локальный сервер</b> — может быть вашим собственным компьютером. Чтобы создать такой сервер нужно установить некоторое программное обеспечение, но об этом вы узнаете из курса PHP.
    </p>
    <p>
        Локальные сервера, как правило, располагаются по адресу: <b>http://127.0.0.1:5500</b>. <br>
        <b>127.0.0.1</b> — это зарезервированное доменное имя для локальной сети. Такая запись эквивалентна <b>localhost</b>. Когда в адресе указывается <b>127.0.0.1</b> или <b>localhost</b>, это значит, что компьютер по сети обращается к самому себе.
        <br>
        В конце адреса указано число <b>5500</b> — это порт. Он нужен для идентификации приложения, к которому идет обращение. Ведь на сервере может располагаться несколько сайтов или программ, и, чтобы определить к кому именно был отправлен запрос, используются порты. У каждого приложения свой порт и это не обязательно <b>5500</b>, порты могут быть в диапазоне от <b>0</b> до <b>65535</b>, главное, чтобы он не был занят другим приложением.
    </p>
<pre>
    <code class="hljs language-javascript">

    </code>
</pre>

    <hr>
    <!-- *** Область примера *** -->

    <script>

    </script>
    <script>hljs.highlightAll();</script>
</div>
</body>
</html>
